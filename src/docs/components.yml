components:
  schemas:
    Vote:
      type: object
      properties:
        _id:
          type: string
        owner:
          type: string

    Message:
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        owner:
          type: string
        thread:
          type: string
        upVotes:
          type: array
          items:
            $ref: '#/components/schemas/Vote'
        downVotes:
          type: array
          items:
            $ref: '#/components/schemas/Vote'
        pseuodonym:
          type: string
        pseuodonymId:
          type: string

    Pseudonym:
      type: object
      properties:
        _id:
          type: string
        token:
          type: string
        pseudonym:
          type: string
        active:
          type: boolean

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        role:
          type: string
          enum: [user, admin]
        goodReputation:
          type: boolean
        createdAt:
          type: date
        email:
          type: string
        pseudonyms:
          type: array
          items:
            $ref: '#/components/schemas/Pseudonym'
      example:
        id: 5ebac534954b54139806c112
        username: fakejake
        email: fake@example.com
        role: user
        goodReputation: true
        createdAt: 2021-11-30T01:51:01.639Z
        pseudonyms:
          - token: b019d20aa74a16c8c68701cc2937c8a76bc6cdc6247d51cf80bb3d1f27f6ac3f9dec9c0dbe80543f8d2c40428c84576cc3a644668be5b3156be070f57be0521a13c3f6f42a8d2c8ef13f92e092236f4e
            pseudonym: Profound Red Rattlesnake

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Topic:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          required: true
        slug:
          type: string
        votingAllowed:
          type: boolean
        threadCreationAllowed:
          type: boolean
        private:
          type: boolean
          required: true
        archivable:
          type: boolean
          required: true
        archiveEmail:
          type: string
          required: true
        owner: type
        createdAt:
          type: date
        updatedAt:
          type: date
      example:
        id: 61b7ea6aa771004e80ed4409
        name: favorite dogs
        slug: favorite-dogs
        votingAllowed: true
        threadCreationAllowed: true
        private: false
        archivable: true
        createdAt: 2021-11-30T01:51:01.639Z
        updatedAt: 2021-11-30T01:51:01.639Z

    Thread:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        locked:
          type: boolean
        messageCount:
          type: number
        hitTheButton:
          type: boolean
      example:
        id: 61b0ffca7d4eb20ee9dcfe8c
        name: my favorite dog is Rottweiler
        slug: my-favorite-dog-is-Rottweiler
        locked: false
        messageCount: 5

    Poll:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        slug:
          type: string
        locked:
          type: boolean
        owner:
          type: string
        threshold:
          type: number
        expirationDate:
          type: date
        topic:
          type: string
        multiSelect:
          type: boolean
        allowNewChoices:
          type: boolean
        choicesVisible:
          type: boolean
        responseCountsVisible:
          type: boolean
        onlyOwnChoicesVisible:
          type: boolean
        whenResultsVisible:
          type: string
        responsesVisibleToNonParticipants:
          type: boolean
        responsesVisible:
          type: boolean
        createdAt:
          type: date
        updatedAt:
          type: date
      example:
        id: 61b0ffca7d4eb20ee9dcfe8d
        title: 'Where should we go to lunch?'
        description: 'This is a poll to decide where we should go to lunch'
        slug: 'where-should-we-go-to-lunch'
        locked: false
        owner: 671935adec641ee43536bd7c
        threshold: 10
        expirationDate: 2024-11-20T00:00:00.000Z
        topic: 6733fe79ca20209f1fa02168
        multiSelect: true
        allowNewChoices: true
        choicesVisible: false
        responseCountsVisible: false
        onlyOwnChoicesVisible: true
        whenResultsVisible: thresholdAndExpiration
        responsesVisibleToNonParticipants: false
        responsesVisible: true
        createdAt: 2021-11-30T01:51:01.639Z
        updatedAt: 2021-11-30T01:51:01.639Z

    PollChoice:
      properties:
        id:
          type: string
        text:
          type: string
        poll:
          type: string
      example:
        id: 61b0ffca7d4eb20ee9dcfe8e
        text: 'Poll choice #1'
        poll: 6750a665664156091cdf5a31

    PollResponse:
      properties:
        id:
          type: string
        poll:
          type: string
        choice:
          type: string
      example:
        poll: 6750a665664156091cdf5a31
        id: 61b0ffca7d4eb20ee9dcfe8e
        choice: 61b0ffca7d4eb20ee9dcfe8f

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please log in
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
